{"version":3,"file":"/Modules/Slider/Assets/admin/js/slider.js","mappings":"0MACI,WAAYA,I,4FAAM,SACdC,KAAKC,MAAQD,KAAKE,SAASH,G,+CAG/B,SAASA,GACLA,EAAKE,MAAME,QAAUJ,EAAKE,MAAME,SAAWH,KAAKI,yBAEhD,IAAIC,EAAWC,EAAED,SAASE,EAAE,mBAAmBC,QAE/C,OAAOD,EAAEF,EAASN,M,oCAGtB,WACI,MAAO,CAAEU,UAAW,GAAIC,UAAW,GAAIC,UAAW,GAAIC,eAAgB,M,oBAG1E,WAII,OAHAZ,KAAKa,iBACLb,KAAKc,0BAEEd,KAAKC,Q,4BAGhB,WACID,KAAKe,oBACLf,KAAKgB,2B,+BAGT,WAAoB,WAChBhB,KAAKC,MAAMgB,KAAK,iBAAiBC,GAAG,SAAS,WACzC,EAAKjB,MAAMkB,c,oCAInB,WAAyB,WACrBnB,KAAKC,MAAMgB,KAAK,wBAAwBC,GAAG,UAAU,SAACE,GAClD,EAAKnB,MAAMgB,KAAK,kBAAkBI,OAClC,EAAKpB,MAAMgB,KAAX,WAAoBG,EAAEE,cAAcC,QAASC,Y,qCAIrD,WAA0B,WACtBC,YAAW,WACP,EAAKxB,MAAMgB,KAAK,wBAAwBS,QAAQ,kB,0tCC1C5D,I,WCCI,aAAc,Y,4FAAA,SACV1B,KAAK2B,WAAa,EAElBpB,EAAE,cAAcW,GAAG,SAAS,WACxB,EAAKU,cAGT5B,KAAK6B,gBAAgBC,GAAG/B,KAAK,kBAC7BC,KAAK+B,qBACL/B,KAAKgC,gB,qDAGT,SAAgBC,GAAQ,UACGA,GADH,IACpB,2BAA+B,KAAtBC,EAAsB,QAC3BlC,KAAK4B,SAASM,IAFE,8BAOE,IAAlBD,EAAOE,QACP5B,EAAE,cAAcmB,QAAQ,W,sBAIhC,WAA0B,IAAjBQ,EAAiB,uDAAJ,GACdjC,EAAQ,IAAImC,EAAM,CAAEC,YAAarC,KAAK2B,aAAc1B,MAAOiC,IAE/D3B,EAAE,mBAAmB+B,OAAOrC,EAAMsC,UAClChC,EAAE,iBAAiBiC,SAAS,CACxBC,KAAM,OACNC,kBAAmB,OACnBC,uBAAwB,OACxBC,UAAW,OACXC,YAAa,W,gCAIrB,WACIC,SAASC,OAAOC,SAASC,eAAe,kBAAmB,CACvDC,OAAQ,cACRC,UAAW,Q,2BAInB,WACI5C,EAAE,mBAAmBW,GAAG,QAAS,gBAAgB,SAACE,GACjC,IAAIgC,YAAY,CAAEX,KAAM,UAE9BvB,GAAG,UAAU,SAACmC,GACjB,IAAI7C,EAAO,mCAAH,OACQ6C,EAAMC,KADd,qEAEgClC,EAAEE,cAAciC,QAAQlB,YAFxD,+BAE0FgB,EAAMG,GAFhG,wBAKRjD,EAAEa,EAAEE,eAAed,KAAKA,Y,oCDrDxCD,EAAE,aAAaW,GAAG,UAAU,SAACE,GACzBb,EAAE,yBAAyBkD,YAAY,WAG3ClD,EAAE,iBAAiBiC,SAAS,CACxBC,KAAM,OACNC,kBAAmB,OACnBC,uBAAwB,OACxBC,UAAW,OACXC,YAAa,U","sources":["webpack:///./Modules/Slider/Resources/assets/admin/js/Slide.js","webpack:///./Modules/Slider/Resources/assets/admin/js/app.js","webpack:///./Modules/Slider/Resources/assets/admin/js/Slider.js"],"sourcesContent":["export default class {\n    constructor(data) {\n        this.slide = this.getSlide(data);\n    }\n\n    getSlide(data) {\n        data.slide.options = data.slide.options || this.getDefaultSlideOptions();\n\n        let template = _.template($('#slide-template').html());\n\n        return $(template(data));\n    }\n\n    getDefaultSlideOptions() {\n        return { caption_1: {}, caption_2: {}, caption_3: {}, call_to_action: {} };\n    }\n\n    render() {\n        this.eventListeners();\n        this.showSelectedOptionBlock();\n\n        return this.slide;\n    }\n\n    eventListeners() {\n        this.attachDeleteEvent();\n        this.attachChangeBlockEvent();\n    }\n\n    attachDeleteEvent() {\n        this.slide.find('.delete-slide').on('click', () => {\n            this.slide.remove();\n        });\n    }\n\n    attachChangeBlockEvent() {\n        this.slide.find('.change-option-block').on('change', (e) => {\n            this.slide.find('.slide-options').hide();\n            this.slide.find(`.${e.currentTarget.value}`).show();\n        });\n    }\n\n    showSelectedOptionBlock() {\n        setTimeout(() => {\n            this.slide.find('.change-option-block').trigger('change');\n        });\n    }\n}\n","import Slider from './Slider';\n\nnew Slider();\n\n$('#autoplay').on('change', (e) => {\n    $('.autoplay-speed-field').toggleClass('hide');\n});\n\n$('.color-picker').spectrum({\n    type: \"text\",\n    togglePaletteOnly: \"true\",\n    hideAfterPaletteSelect: \"true\",\n    showInput: \"true\",\n    showInitial: \"true\"\n});","import Slide from './Slide';\n\nexport default class {\n    constructor() {\n        this.slideCount = 0;\n\n        $('.add-slide').on('click', () => {\n            this.addSlide();\n        });\n\n        this.addSliderSlides(CI.data['slider.slides']);\n        this.makeSlidesSortable();\n        this.addSlideImage();\n    }\n\n    addSliderSlides(slides) {\n        for (let attributes of slides) {\n            this.addSlide(attributes);\n        }\n\n        // If there is no model slide or any old slide then\n        // automatically add an empty slide on page load.\n        if (slides.length === 0) {\n            $('.add-slide').trigger('click');\n        }\n    }\n\n    addSlide(attributes = {}) {\n        let slide = new Slide({ slideNumber: this.slideCount++, slide: attributes });\n\n        $('#slides-wrapper').append(slide.render());\n        $('.color-picker').spectrum({\n            type: \"text\",\n            togglePaletteOnly: \"true\",\n            hideAfterPaletteSelect: \"true\",\n            showInput: \"true\",\n            showInitial: \"true\"\n        });\n    }\n\n    makeSlidesSortable() {\n        Sortable.create(document.getElementById('slides-wrapper'), {\n            handle: '.slide-drag',\n            animation: 150,\n        });\n    }\n\n    addSlideImage() {\n        $('#slides-wrapper').on('click', '.slide-image', (e) => {\n            let picker = new MediaPicker({ type: 'image' });\n\n            picker.on('select', (files) => {\n                let html = `\n                    <img src=\"${files.path}\">\n                    <input type=\"hidden\" name=\"slides[${e.currentTarget.dataset.slideNumber}][files_id]\" value=\"${files.id}\">\n                `;\n\n                $(e.currentTarget).html(html);\n            });\n        });\n    }\n}\n"],"names":["data","this","slide","getSlide","options","getDefaultSlideOptions","template","_","$","html","caption_1","caption_2","caption_3","call_to_action","eventListeners","showSelectedOptionBlock","attachDeleteEvent","attachChangeBlockEvent","find","on","remove","e","hide","currentTarget","value","show","setTimeout","trigger","slideCount","addSlide","addSliderSlides","CI","makeSlidesSortable","addSlideImage","slides","attributes","length","Slide","slideNumber","append","render","spectrum","type","togglePaletteOnly","hideAfterPaletteSelect","showInput","showInitial","Sortable","create","document","getElementById","handle","animation","MediaPicker","files","path","dataset","id","toggleClass"],"sourceRoot":""}